apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply from: 'gradle/property_helper.gradle'
apply from: 'gradle/property_loader.gradle'

// Load mod related properties
ext.modName = getRequiredString('mod_name')
ext.modAuthor = getRequiredString('mod_author')
ext.modId = getRequiredString('mod_id')
ext.modCredits = getDefaultString('mod_credits', ext.modAuthor)
ext.modDescription = getOptionalString('mod_description')
ext.modChangelog = getOptionalString('mod_changelog')
ext.modHomepage = getOptionalString('mod_homepage')
ext.modSource = getOptionalString('mod_source')
ext.modIssues = getOptionalString('mod_issues')

// Load Minecraft specific properties
ext.mcVersion = getRequiredString('minecraft_version')
ext.username = getDefaultString('minecraft_username', 'Developer')

// Load local-only properties
def config = new Properties()
def propFile = new File('local/gradle.properties')
if (propFile.canRead()) {
	config.load(new FileInputStream(propFile))
	for (Map.Entry property in config) {
		ext[property.key.toString()] = property.value
	}
}

// Load build-time modules
apply from: 'gradle/build_number.gradle'
apply from: 'gradle/common_manifest.gradle'
apply from: 'gradle/common_artifacts.gradle'
apply from: 'gradle/forge.gradle'
apply from: 'gradle/minify_jsons.gradle'
apply from: 'gradle/git_changelog.gradle'

// Load publishing modules

//apply from: 'gradle/maven.gradle'
project.logger.lifecycle('the gradle/maven.gradle module is disabled and must be reworked')
//apply from: 'gradle/curseforge.gradle'
project.logger.lifecycle('the gradle/curseforge.gradle module is disabled and must be reworked')
//apply from: 'gradle/modrinth.gradle'
project.logger.lifecycle('the gradle/modrinth.gradle module is disabled and must be reworked')
//apply from: 'gradle/github.gradle'
project.logger.lifecycle('the gradle/github.gradle module is disabled and must be reworked')
//apply from: 'gradle/version_checker.gradle'
project.logger.lifecycle('the gradle/version_checker.gradle module is disabled and must be reworked')
//apply from: 'gradle/signing.gradle'
project.logger.lifecycle('the gradle/signing.gradle module is disabled and must be reworked')

// Load the old project build.gradle stuff
// Also, this must be run AFTER the forge module since it modifies a task from that module
apply from: 'gradle/project.gradle'

//for (Object i : configurations.reobfJarConfiguration.artifacts) {
//	println i
//}

//tasks.withType

//for (Object i : tasks['reobfJar'].properties) {
//	println i
//}